#!../../snabb snsh

-- Snabb test script for testing Tx->Rx MAC Loopback mode

local basic_apps = require("apps.basic.basic_apps")
local intel      = require("apps.intel_mp.intel_mp")
local pcap       = require("apps.pcap.pcap")
local lib        = require("core.lib")

local pciaddr0 = lib.getenv("SNABB_PCI_INTEL0")

local c = config.new()

config.app(c, "source", pcap.PcapReader, "source2.pcap")
config.app(c, 'sink', basic_apps.Sink)

-- send/receive packets on nic0 mac0
config.app(c, "nic0mac0", intel.Intel,
           { pciaddr = pciaddr0,
             vmdq = true,
             macaddr = "50:46:5d:74:1d:f9",
             mac_loopback = true })
config.app(c, "repeat", basic_apps.Repeater)
config.link(c, "source.output -> repeat.input")
config.link(c, "repeat.output -> nic0mac0.input")

-- receive packets on nic0 mac1/2
config.app(c, "nic0mac1", intel.Intel,
           { pciaddr = pciaddr0,
             vmdq = true,
             macaddr = "12:34:56:78:9a:bc",
             mac_loopback = true })
config.app(c, "nic0mac2", intel.Intel,
           { pciaddr = pciaddr0,
             vmdq = true,
             macaddr = "90:72:82:78:c9:7a",
             mac_loopback = true })

config.link(c, "nic0mac1.output -> sink.input0")
config.link(c, "nic0mac2.output -> sink.input1")

engine.configure(c)
engine.main({ duration = 1 })
engine.report_links()
engine.app_table.nic0mac0:debug()

assert(link.stats(engine.app_table.sink.input.input0).rxpackets > 0,
          "expected packet rx on mac 1")
assert(link.stats(engine.app_table.sink.input.input1).rxpackets > 0,
          "expected packet rx on mac 2")
