!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	lb/bench.lua	/^local function A(i, j)$/;"	f
A	lb/heavy/spectralnorm/bench.lua	/^local function A(i, j)$/;"	f
A	tweetnacl.c	/^sv A(gf o,const gf a,const gf b)$/;"	f
APP	Makefile	/^APP=client$/;"	m
ARRAY2D	lb/light/life/bench.lua	/^function ARRAY2D(w,h)$/;"	f
AbstractConstraint:add_constraint 	lb/light/deltablue/bench.lua	/^function AbstractConstraint:add_constraint (planner)$/;"	f
AbstractConstraint:build 	lb/light/deltablue/bench.lua	/^function AbstractConstraint:build (strength_sym)$/;"	f
AbstractConstraint:destroy_constraint 	lb/light/deltablue/bench.lua	/^function AbstractConstraint:destroy_constraint (planner)$/;"	f
AbstractConstraint:inputs_known 	lb/light/deltablue/bench.lua	/^function AbstractConstraint:inputs_known (mark)$/;"	f
AbstractConstraint:is_input 	lb/light/deltablue/bench.lua	/^function AbstractConstraint:is_input ()$/;"	f
AbstractConstraint:satisfy 	lb/light/deltablue/bench.lua	/^function AbstractConstraint:satisfy (mark, planner)$/;"	f
Ack	lb/heavy/recursive_ack/bench.lua	/^local function Ack(m, n)$/;"	f
Aircraft.new 	lb/heavy/collisiondetector/bench.lua	/^function Aircraft.new (callsign, position)$/;"	f
AtAv	lb/bench.lua	/^local function AtAv(x, y, t, N)$/;"	f
AtAv	lb/heavy/spectralnorm/bench.lua	/^local function AtAv(x, y, t, N)$/;"	f
Atv	lb/bench.lua	/^local function Atv(x, y, N)$/;"	f
Atv	lb/heavy/spectralnorm/bench.lua	/^local function Atv(x, y, N)$/;"	f
Av	lb/bench.lua	/^local function Av(x, y, N)$/;"	f
Av	lb/heavy/spectralnorm/bench.lua	/^local function Av(x, y, N)$/;"	f
Ball.new 	lb/light/bounce/bench.lua	/^function Ball.new (random)$/;"	f
Ball:bounce 	lb/light/bounce/bench.lua	/^function Ball:bounce ()$/;"	f
BasicBlock.new 	lb/heavy/havlak/bench.lua	/^function BasicBlock.new (name)$/;"	f
BasicBlock:add_in_edge 	lb/heavy/havlak/bench.lua	/^function BasicBlock:add_in_edge (from)$/;"	f
BasicBlock:add_out_edge 	lb/heavy/havlak/bench.lua	/^function BasicBlock:add_out_edge (to)$/;"	f
BasicBlock:custom_hash 	lb/heavy/havlak/bench.lua	/^function BasicBlock:custom_hash ()$/;"	f
BasicBlock:num_pred 	lb/heavy/havlak/bench.lua	/^function BasicBlock:num_pred ()$/;"	f
BasicBlockEdge.new 	lb/heavy/havlak/bench.lua	/^function BasicBlockEdge.new (cfg, from_name, to_name)$/;"	f
BinaryConstraint:add_to_graph 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:add_to_graph ()$/;"	f
BinaryConstraint:build 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:build (v1, v2, strength)$/;"	f
BinaryConstraint:choose_method 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:choose_method (mark)$/;"	f
BinaryConstraint:inputs_do 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:inputs_do (fn)$/;"	f
BinaryConstraint:inputs_has_one 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:inputs_has_one (fn)$/;"	f
BinaryConstraint:is_satisfied 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:is_satisfied ()$/;"	f
BinaryConstraint:mark_unsatisfied 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:mark_unsatisfied ()$/;"	f
BinaryConstraint:output 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:output ()$/;"	f
BinaryConstraint:recalculate 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:recalculate ()$/;"	f
BinaryConstraint:remove_from_graph 	lb/light/deltablue/bench.lua	/^function BinaryConstraint:remove_from_graph ()$/;"	f
BottomUpTree	lb/heavy/binarytrees/bench.lua	/^local function BottomUpTree(item, depth)$/;"	f
CC	Makefile	/^CC=gcc$/;"	m
CELLS	lb/light/life/bench.lua	/^function CELLS(w,h)$/;"	f
CFLAGS	Makefile	/^CFLAGS=-Wall -pedantic $/;"	m
CallSign.new 	lb/heavy/collisiondetector/bench.lua	/^function CallSign.new (value)$/;"	f
CallSign:compare_to 	lb/heavy/collisiondetector/bench.lua	/^function CallSign:compare_to (other)$/;"	f
Ch	tweetnacl.c	/^static u64 Ch(u64 x,u64 y,u64 z) { return (x & y) ^ (~x & z); }$/;"	f	file:
Collision.new 	lb/heavy/collisiondetector/bench.lua	/^function Collision.new (aircraft_a, aircraft_b, position)$/;"	f
CollisionDetector.new 	lb/heavy/collisiondetector/bench.lua	/^function CollisionDetector.new ()$/;"	f
CollisionDetector:draw_motion_on_voxel_map 	lb/heavy/collisiondetector/bench.lua	/^function CollisionDetector:draw_motion_on_voxel_map (voxel_map, motion)$/;"	f
CollisionDetector:handle_new_frame 	lb/heavy/collisiondetector/bench.lua	/^function CollisionDetector:handle_new_frame (frame)$/;"	f
CollisionDetector:is_in_voxel 	lb/heavy/collisiondetector/bench.lua	/^function CollisionDetector:is_in_voxel (voxel, motion)$/;"	f
CollisionDetector:put_into_map 	lb/heavy/collisiondetector/bench.lua	/^function CollisionDetector:put_into_map (voxel_map, voxel, motion)$/;"	f
CollisionDetector:recurse 	lb/heavy/collisiondetector/bench.lua	/^function CollisionDetector:recurse (voxel_map, seen, next_voxel, motion)$/;"	f
CollisionDetector:reduce_collision_set 	lb/heavy/collisiondetector/bench.lua	/^function CollisionDetector:reduce_collision_set (motions)$/;"	f
CollisionDetector:voxel_hash 	lb/heavy/collisiondetector/bench.lua	/^function CollisionDetector:voxel_hash (position)$/;"	f
Content	tools.c	/^typedef struct content Content;$/;"	t	typeref:struct:content	file:
Content	tools.h	/^    typedef struct content Content;$/;"	t	typeref:struct:content
ControlFlowGraph.new 	lb/heavy/havlak/bench.lua	/^function ControlFlowGraph.new ()$/;"	f
ControlFlowGraph:add_edge 	lb/heavy/havlak/bench.lua	/^function ControlFlowGraph:add_edge (edge)$/;"	f
ControlFlowGraph:create_node 	lb/heavy/havlak/bench.lua	/^function ControlFlowGraph:create_node (name)$/;"	f
ControlFlowGraph:get_basic_blocks 	lb/heavy/havlak/bench.lua	/^function ControlFlowGraph:get_basic_blocks ()$/;"	f
ControlFlowGraph:get_start_basic_block 	lb/heavy/havlak/bench.lua	/^function ControlFlowGraph:get_start_basic_block ()$/;"	f
ControlFlowGraph:num_nodes 	lb/heavy/havlak/bench.lua	/^function ControlFlowGraph:num_nodes ()$/;"	f
D	tweetnacl.c	/^  D = {0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203},$/;"	v	file:
D2	tweetnacl.c	/^  D2 = {0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406},$/;"	v	file:
Dictionary.new 	lb/heavy/collisiondetector/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/heavy/havlak/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/array3d/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/bounce/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/chamenos/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/deltablue/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/fannkuch_redux/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/life/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/mandelbrot/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/partialsums/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/queens/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/light/ray/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary.new 	lb/som.lua	/^function Dictionary.new (size)$/;"	f
Dictionary:at 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/heavy/havlak/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/array3d/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/bounce/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/chamenos/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/deltablue/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/life/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/mandelbrot/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/partialsums/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/queens/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/light/ray/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at 	lb/som.lua	/^function Dictionary:at (key)$/;"	f
Dictionary:at_put 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/heavy/havlak/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/array3d/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/bounce/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/chamenos/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/deltablue/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/life/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/mandelbrot/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/partialsums/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/queens/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/light/ray/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:at_put 	lb/som.lua	/^function Dictionary:at_put (key, value)$/;"	f
Dictionary:contains_key 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/heavy/havlak/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/array3d/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/bounce/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/chamenos/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/deltablue/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/life/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/mandelbrot/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/partialsums/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/queens/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/light/ray/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:contains_key 	lb/som.lua	/^function Dictionary:contains_key (key)$/;"	f
Dictionary:get_bucket 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/heavy/havlak/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/array3d/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/bounce/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/chamenos/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/deltablue/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/life/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/mandelbrot/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/partialsums/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/queens/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/light/ray/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket 	lb/som.lua	/^function Dictionary:get_bucket (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/heavy/havlak/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/array3d/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/bounce/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/chamenos/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/deltablue/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/life/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/mandelbrot/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/partialsums/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/queens/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/light/ray/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:get_bucket_idx 	lb/som.lua	/^function Dictionary:get_bucket_idx (hash)$/;"	f
Dictionary:hash 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/heavy/havlak/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/array3d/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/bounce/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/chamenos/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/deltablue/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/life/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/mandelbrot/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/partialsums/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/queens/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/light/ray/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:hash 	lb/som.lua	/^function Dictionary:hash (key)$/;"	f
Dictionary:insert_bucket_entry 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/heavy/havlak/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/array3d/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/bounce/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/chamenos/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/deltablue/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/life/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/mandelbrot/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/partialsums/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/queens/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/light/ray/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:insert_bucket_entry 	lb/som.lua	/^function Dictionary:insert_bucket_entry (key, value, hash, head)$/;"	f
Dictionary:is_empty 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/heavy/havlak/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/array3d/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/bounce/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/chamenos/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/deltablue/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/life/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/mandelbrot/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/partialsums/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/queens/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/light/ray/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:is_empty 	lb/som.lua	/^function Dictionary:is_empty ()$/;"	f
Dictionary:keys 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/heavy/havlak/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/array3d/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/bounce/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/chamenos/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/deltablue/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/life/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/mandelbrot/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/partialsums/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/queens/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/light/ray/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:keys 	lb/som.lua	/^function Dictionary:keys ()$/;"	f
Dictionary:new_entry 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/heavy/havlak/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/array3d/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/bounce/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/chamenos/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/deltablue/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/life/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/mandelbrot/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/partialsums/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/queens/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/light/ray/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:new_entry 	lb/som.lua	/^function Dictionary:new_entry (key, value, hash)$/;"	f
Dictionary:remove_all 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/heavy/havlak/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/array3d/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/bounce/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/chamenos/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/deltablue/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/life/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/mandelbrot/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/partialsums/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/queens/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/light/ray/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:remove_all 	lb/som.lua	/^function Dictionary:remove_all ()$/;"	f
Dictionary:resize 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/heavy/havlak/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/array3d/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/bounce/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/chamenos/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/deltablue/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/life/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/mandelbrot/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/partialsums/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/queens/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/light/ray/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:resize 	lb/som.lua	/^function Dictionary:resize ()$/;"	f
Dictionary:split_bucket 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/heavy/havlak/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/array3d/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/bounce/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/chamenos/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/deltablue/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/life/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/mandelbrot/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/partialsums/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/queens/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/light/ray/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:split_bucket 	lb/som.lua	/^function Dictionary:split_bucket (old_storage, i, head)$/;"	f
Dictionary:transfer_entries 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/heavy/havlak/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/array3d/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/bounce/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/chamenos/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/deltablue/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/life/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/mandelbrot/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/partialsums/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/queens/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/light/ray/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:transfer_entries 	lb/som.lua	/^function Dictionary:transfer_entries (old_storage)$/;"	f
Dictionary:values 	lb/heavy/collisiondetector/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/heavy/havlak/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/array3d/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/bounce/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/chamenos/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/deltablue/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/fannkuch_redux/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/life/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/mandelbrot/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/partialsums/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/queens/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/light/ray/som.lua	/^function Dictionary:values ()$/;"	f
Dictionary:values 	lb/som.lua	/^function Dictionary:values ()$/;"	f
END_EXECUTION	commands.h	/^    END_EXECUTION = 2$/;"	e	enum:LUA_CMD
EditConstraint.new 	lb/light/deltablue/bench.lua	/^function EditConstraint.new (v, strength, planner)$/;"	f
EditConstraint:execute 	lb/light/deltablue/bench.lua	/^function EditConstraint:execute ()$/;"	f
EditConstraint:is_input 	lb/light/deltablue/bench.lua	/^function EditConstraint:is_input ()$/;"	f
Entry.new 	lb/heavy/collisiondetector/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/heavy/havlak/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/array3d/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/bounce/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/chamenos/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/deltablue/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/fannkuch_redux/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/life/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/mandelbrot/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/partialsums/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/queens/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/light/ray/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry.new 	lb/som.lua	/^function Entry.new (hash, key, value, next)$/;"	f
Entry:match 	lb/heavy/collisiondetector/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/heavy/havlak/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/array3d/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/bounce/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/chamenos/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/deltablue/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/fannkuch_redux/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/life/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/mandelbrot/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/partialsums/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/queens/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/light/ray/som.lua	/^function Entry:match (hash, key)$/;"	f
Entry:match 	lb/som.lua	/^function Entry:match (hash, key)$/;"	f
EqualityConstraint.new 	lb/light/deltablue/bench.lua	/^function EqualityConstraint.new (var1, var2, strength, planner)$/;"	f
EqualityConstraint:execute 	lb/light/deltablue/bench.lua	/^function EqualityConstraint:execute ()$/;"	f
FF	crypto/md5.lua	/^local function FF(a, b, c, d, x, s, ac)$/;"	f
FF	crypto/md5/md5.lua	/^local function FF(a, b, c, d, x, s, ac)$/;"	f
FF	md5.lua	/^local function FF(a, b, c, d, x, s, ac)$/;"	f
FOR	tweetnacl.c	2;"	d	file:
GG	crypto/md5.lua	/^local function GG(a, b, c, d, x, s, ac)$/;"	f
GG	crypto/md5/md5.lua	/^local function GG(a, b, c, d, x, s, ac)$/;"	f
GG	md5.lua	/^local function GG(a, b, c, d, x, s, ac)$/;"	f
HH	crypto/md5.lua	/^local function HH(a, b, c, d, x, s, ac)$/;"	f
HH	crypto/md5/md5.lua	/^local function HH(a, b, c, d, x, s, ac)$/;"	f
HH	md5.lua	/^local function HH(a, b, c, d, x, s, ac)$/;"	f
HavlakLoopFinder.new 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder.new (cfg, lsg)$/;"	f
HavlakLoopFinder:do_dfs 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder:do_dfs (current_node, current)$/;"	f
HavlakLoopFinder:find_loops 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder:find_loops ()$/;"	f
HavlakLoopFinder:identify_edges 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder:identify_edges (size)$/;"	f
HavlakLoopFinder:init_all_nodes 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder:init_all_nodes ()$/;"	f
HavlakLoopFinder:is_ancestor 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder:is_ancestor (w, v)$/;"	f
HavlakLoopFinder:process_edges 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder:process_edges (node_w, w)$/;"	f
HavlakLoopFinder:set_loop_attributes 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder:set_loop_attributes (w, node_pool, loop)$/;"	f
HavlakLoopFinder:step_d 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder:step_d (w, node_pool)$/;"	f
HavlakLoopFinder:step_e_process_non_back_preds 	lb/heavy/havlak/bench.lua	/^function HavlakLoopFinder:step_e_process_non_back_preds (w, node_pool, work_list, x)$/;"	f
I	tweetnacl.c	/^  I = {0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83};$/;"	v	file:
II	crypto/md5.lua	/^local function II(a, b, c, d, x, s, ac)$/;"	f
II	crypto/md5/md5.lua	/^local function II(a, b, c, d, x, s, ac)$/;"	f
II	md5.lua	/^local function II(a, b, c, d, x, s, ac)$/;"	f
IdEntry.new 	lb/heavy/collisiondetector/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/heavy/havlak/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/array3d/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/bounce/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/chamenos/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/deltablue/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/fannkuch_redux/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/life/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/mandelbrot/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/partialsums/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/queens/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/light/ray/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry.new 	lb/som.lua	/^function IdEntry.new (hash, key, value, next)$/;"	f
IdEntry:match 	lb/heavy/collisiondetector/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/heavy/havlak/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/array3d/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/bounce/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/chamenos/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/deltablue/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/fannkuch_redux/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/life/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/mandelbrot/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/partialsums/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/queens/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/light/ray/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdEntry:match 	lb/som.lua	/^function IdEntry:match (hash, key)$/;"	f
IdentityDictionary.new 	lb/heavy/collisiondetector/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/heavy/havlak/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/array3d/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/bounce/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/chamenos/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/deltablue/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/fannkuch_redux/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/life/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/mandelbrot/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/partialsums/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/queens/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/light/ray/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary.new 	lb/som.lua	/^function IdentityDictionary.new (size)$/;"	f
IdentityDictionary:new_entry 	lb/heavy/collisiondetector/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/heavy/havlak/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/array3d/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/bounce/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/chamenos/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/deltablue/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/fannkuch_redux/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/life/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/mandelbrot/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/partialsums/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/queens/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/light/ray/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentityDictionary:new_entry 	lb/som.lua	/^function IdentityDictionary:new_entry (key, value, hash)$/;"	f
IdentitySet.new 	lb/heavy/collisiondetector/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/heavy/havlak/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/array3d/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/bounce/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/chamenos/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/deltablue/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/fannkuch_redux/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/life/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/mandelbrot/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/partialsums/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/queens/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/light/ray/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet.new 	lb/som.lua	/^function IdentitySet.new (size)$/;"	f
IdentitySet:contains 	lb/heavy/collisiondetector/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/heavy/havlak/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/array3d/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/bounce/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/chamenos/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/deltablue/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/fannkuch_redux/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/life/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/mandelbrot/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/partialsums/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/queens/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/light/ray/som.lua	/^function IdentitySet:contains (obj)$/;"	f
IdentitySet:contains 	lb/som.lua	/^function IdentitySet:contains (obj)$/;"	f
InsertResult.new	lb/heavy/collisiondetector/bench.lua	/^function InsertResult.new(is_new_entry, new_node, old_value)$/;"	f
ItemCheck	lb/heavy/binarytrees/bench.lua	/^local function ItemCheck(tree)$/;"	f
K	tweetnacl.c	/^static const u64 K[80] = $/;"	v	file:
L	tweetnacl.c	/^static const u64 L[32] = {0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10};$/;"	v	file:
L32	tweetnacl.c	/^static u32 L32(u32 x,int c) { return (x << c) | ((x&0xffffffff) >> (32 - c)); }$/;"	f	file:
LFLAGS	Makefile	/^LFLAGS=-lcrypto -Ofast -DDEBUG$/;"	m
LIFE	lb/light/life/bench.lua	/^function LIFE(w,h, n)$/;"	f
LUA_CMD	commands.h	/^enum LUA_CMD {$/;"	g
LoopStructureGraph.new 	lb/heavy/havlak/bench.lua	/^function LoopStructureGraph.new ()$/;"	f
LoopStructureGraph:calculate_nesting_level 	lb/heavy/havlak/bench.lua	/^function LoopStructureGraph:calculate_nesting_level ()$/;"	f
LoopStructureGraph:calculate_nesting_level_rec 	lb/heavy/havlak/bench.lua	/^function LoopStructureGraph:calculate_nesting_level_rec (loop, depth)$/;"	f
LoopStructureGraph:create_new_loop 	lb/heavy/havlak/bench.lua	/^function LoopStructureGraph:create_new_loop (bb, is_reducible)$/;"	f
LoopStructureGraph:num_loops 	lb/heavy/havlak/bench.lua	/^function LoopStructureGraph:num_loops ()$/;"	f
LoopTesterApp.new 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp.new ()$/;"	f
LoopTesterApp:add_dummy_loops 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp:add_dummy_loops (num_dummy_loops)$/;"	f
LoopTesterApp:build_base_loop 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp:build_base_loop (from)$/;"	f
LoopTesterApp:build_connect 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp:build_connect (start, end_)$/;"	f
LoopTesterApp:build_diamond 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp:build_diamond (start)$/;"	f
LoopTesterApp:build_straight 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp:build_straight (start, n)$/;"	f
LoopTesterApp:construct_cfg 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp:construct_cfg (par_loops, ppar_loops, pppar_loops)$/;"	f
LoopTesterApp:construct_simple_cfg 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp:construct_simple_cfg ()$/;"	f
LoopTesterApp:find_loops 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp:find_loops (loop_structure)$/;"	f
LoopTesterApp:main 	lb/heavy/havlak/bench.lua	/^function LoopTesterApp:main (num_dummy_loops, find_loop_iterations, par_loops,$/;"	f
M	tweetnacl.c	/^sv M(gf o,const gf a,const gf b)$/;"	f
MAX_COPY_SIZE	client.c	271;"	d	file:
Maj	tweetnacl.c	/^static u64 Maj(u64 x,u64 y,u64 z) { return (x & y) ^ (x & z) ^ (y & z); }$/;"	f	file:
Motion.new 	lb/heavy/collisiondetector/bench.lua	/^function Motion.new (callsign, pos_one, pos_two)$/;"	f
Motion:delta 	lb/heavy/collisiondetector/bench.lua	/^function Motion:delta ()$/;"	f
Motion:find_intersection 	lb/heavy/collisiondetector/bench.lua	/^function Motion:find_intersection (other)$/;"	f
Node.new 	lb/heavy/collisiondetector/bench.lua	/^function Node.new (key, value)$/;"	f
Node:successor 	lb/heavy/collisiondetector/bench.lua	/^function Node:successor ()$/;"	f
Plan.new 	lb/light/deltablue/bench.lua	/^function Plan.new ()$/;"	f
Plan:execute 	lb/light/deltablue/bench.lua	/^function Plan:execute ()$/;"	f
Planner.chain_test 	lb/light/deltablue/bench.lua	/^function Planner.chain_test (n)$/;"	f
Planner.new 	lb/light/deltablue/bench.lua	/^function Planner.new ()$/;"	f
Planner.projection_test 	lb/light/deltablue/bench.lua	/^function Planner.projection_test (n)$/;"	f
Planner:add_constraints_consuming_to 	lb/light/deltablue/bench.lua	/^function Planner:add_constraints_consuming_to (v, coll)$/;"	f
Planner:add_propagate 	lb/light/deltablue/bench.lua	/^function Planner:add_propagate (c, mark)$/;"	f
Planner:change_var 	lb/light/deltablue/bench.lua	/^function Planner:change_var (var, val)$/;"	f
Planner:constraints_consuming 	lb/light/deltablue/bench.lua	/^function Planner:constraints_consuming (v, fn)$/;"	f
Planner:extract_plan_from_constraints 	lb/light/deltablue/bench.lua	/^function Planner:extract_plan_from_constraints (constraints)$/;"	f
Planner:incremental_add 	lb/light/deltablue/bench.lua	/^function Planner:incremental_add (constraint)$/;"	f
Planner:incremental_remove 	lb/light/deltablue/bench.lua	/^function Planner:incremental_remove (constraint)$/;"	f
Planner:make_plan 	lb/light/deltablue/bench.lua	/^function Planner:make_plan (sources)$/;"	f
Planner:new_mark 	lb/light/deltablue/bench.lua	/^function Planner:new_mark ()$/;"	f
Planner:propagate_from 	lb/light/deltablue/bench.lua	/^function Planner:propagate_from (v)$/;"	f
Planner:remove_propagate_from 	lb/light/deltablue/bench.lua	/^function Planner:remove_propagate_from (out)$/;"	f
R	tweetnacl.c	/^static u64 R(u64 x,int c) { return (x >> c) | (x << (64 - c)); }$/;"	f	file:
REGISTER_NEW_CLIENT	commands.h	/^    REGISTER_NEW_CLIENT = 0,$/;"	e	enum:LUA_CMD
RNG	client.c	/^RNG(uint8_t *dest, unsigned size) $/;"	f
Random.new 	lb/heavy/collisiondetector/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/heavy/havlak/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/array3d/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/bounce/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/chamenos/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/deltablue/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/fannkuch_redux/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/life/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/mandelbrot/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/partialsums/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/queens/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/light/ray/som.lua	/^function Random.new ()$/;"	f
Random.new 	lb/som.lua	/^function Random.new ()$/;"	f
Random:next 	lb/heavy/collisiondetector/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/heavy/havlak/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/array3d/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/bounce/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/chamenos/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/deltablue/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/fannkuch_redux/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/life/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/mandelbrot/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/partialsums/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/queens/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/light/ray/som.lua	/^function Random:next ()$/;"	f
Random:next 	lb/som.lua	/^function Random:next ()$/;"	f
RbtEntry.new	lb/heavy/collisiondetector/bench.lua	/^function RbtEntry.new(key, value)$/;"	f
RedBlackTree.new 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree.new ()$/;"	f
RedBlackTree:find_node 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree:find_node (key)$/;"	f
RedBlackTree:for_each 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree:for_each (fn)$/;"	f
RedBlackTree:get 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree:get (key)$/;"	f
RedBlackTree:left_rotate 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree:left_rotate (x)$/;"	f
RedBlackTree:put 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree:put (key, value)$/;"	f
RedBlackTree:remove 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree:remove (key)$/;"	f
RedBlackTree:remove_fixup 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree:remove_fixup (x, x_parent)$/;"	f
RedBlackTree:right_rotate 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree:right_rotate (y)$/;"	f
RedBlackTree:tree_insert 	lb/heavy/collisiondetector/bench.lua	/^function RedBlackTree:tree_insert (key, value)$/;"	f
S	tweetnacl.c	/^sv S(gf o,const gf a)$/;"	f
SEND_NEW_FILE	commands.h	/^    SEND_NEW_FILE = 1,$/;"	e	enum:LUA_CMD
SOURCE	Makefile	/^SOURCE=*.c$/;"	m
ScaleConstraint.new 	lb/light/deltablue/bench.lua	/^function ScaleConstraint.new (src, scale, offset, dest, strength, planner)$/;"	f
ScaleConstraint:add_to_graph 	lb/light/deltablue/bench.lua	/^function ScaleConstraint:add_to_graph ()$/;"	f
ScaleConstraint:execute 	lb/light/deltablue/bench.lua	/^function ScaleConstraint:execute ()$/;"	f
ScaleConstraint:inputs_do 	lb/light/deltablue/bench.lua	/^function ScaleConstraint:inputs_do (fn)$/;"	f
ScaleConstraint:recalculate 	lb/light/deltablue/bench.lua	/^function ScaleConstraint:recalculate ()$/;"	f
ScaleConstraint:remove_from_graph 	lb/light/deltablue/bench.lua	/^function ScaleConstraint:remove_from_graph ()$/;"	f
Set.new 	lb/heavy/collisiondetector/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/heavy/havlak/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/array3d/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/bounce/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/chamenos/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/deltablue/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/fannkuch_redux/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/life/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/mandelbrot/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/partialsums/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/queens/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/light/ray/som.lua	/^function Set.new (size)$/;"	f
Set.new 	lb/som.lua	/^function Set.new (size)$/;"	f
Set:add 	lb/heavy/collisiondetector/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/heavy/havlak/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/array3d/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/bounce/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/chamenos/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/deltablue/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/fannkuch_redux/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/life/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/mandelbrot/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/partialsums/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/queens/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/light/ray/som.lua	/^function Set:add (obj)$/;"	f
Set:add 	lb/som.lua	/^function Set:add (obj)$/;"	f
Set:collect 	lb/heavy/collisiondetector/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/heavy/havlak/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/array3d/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/bounce/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/chamenos/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/deltablue/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/fannkuch_redux/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/life/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/mandelbrot/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/partialsums/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/queens/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/light/ray/som.lua	/^function Set:collect (fn)$/;"	f
Set:collect 	lb/som.lua	/^function Set:collect (fn)$/;"	f
Set:contains 	lb/heavy/collisiondetector/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/heavy/havlak/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/array3d/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/bounce/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/chamenos/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/deltablue/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/fannkuch_redux/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/life/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/mandelbrot/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/partialsums/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/queens/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/light/ray/som.lua	/^function Set:contains (obj)$/;"	f
Set:contains 	lb/som.lua	/^function Set:contains (obj)$/;"	f
Set:each 	lb/heavy/collisiondetector/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/heavy/havlak/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/array3d/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/bounce/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/chamenos/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/deltablue/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/fannkuch_redux/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/life/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/mandelbrot/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/partialsums/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/queens/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/light/ray/som.lua	/^function Set:each (fn)$/;"	f
Set:each 	lb/som.lua	/^function Set:each (fn)$/;"	f
Set:get_one 	lb/heavy/collisiondetector/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/heavy/havlak/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/array3d/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/bounce/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/chamenos/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/deltablue/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/fannkuch_redux/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/life/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/mandelbrot/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/partialsums/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/queens/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/light/ray/som.lua	/^function Set:get_one (fn)$/;"	f
Set:get_one 	lb/som.lua	/^function Set:get_one (fn)$/;"	f
Set:has_some 	lb/heavy/collisiondetector/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/heavy/havlak/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/array3d/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/bounce/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/chamenos/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/deltablue/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/fannkuch_redux/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/life/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/mandelbrot/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/partialsums/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/queens/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/light/ray/som.lua	/^function Set:has_some (fn)$/;"	f
Set:has_some 	lb/som.lua	/^function Set:has_some (fn)$/;"	f
Set:remove_all 	lb/heavy/collisiondetector/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/heavy/havlak/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/array3d/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/bounce/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/chamenos/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/deltablue/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/fannkuch_redux/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/life/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/mandelbrot/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/partialsums/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/queens/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/light/ray/som.lua	/^function Set:remove_all ()$/;"	f
Set:remove_all 	lb/som.lua	/^function Set:remove_all ()$/;"	f
Set:size 	lb/heavy/collisiondetector/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/heavy/havlak/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/array3d/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/bounce/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/chamenos/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/deltablue/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/fannkuch_redux/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/life/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/mandelbrot/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/partialsums/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/queens/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/light/ray/som.lua	/^function Set:size ()$/;"	f
Set:size 	lb/som.lua	/^function Set:size ()$/;"	f
Sigma0	tweetnacl.c	/^static u64 Sigma0(u64 x) { return R(x,28) ^ R(x,34) ^ R(x,39); }$/;"	f	file:
Sigma1	tweetnacl.c	/^static u64 Sigma1(u64 x) { return R(x,14) ^ R(x,18) ^ R(x,41); }$/;"	f	file:
SimpleLoop.new 	lb/heavy/havlak/bench.lua	/^function SimpleLoop.new (bb, is_reducible)$/;"	f
SimpleLoop:add_child_loop 	lb/heavy/havlak/bench.lua	/^function SimpleLoop:add_child_loop (loop)$/;"	f
SimpleLoop:add_node 	lb/heavy/havlak/bench.lua	/^function SimpleLoop:add_node (bb)$/;"	f
SimpleLoop:set_is_root 	lb/heavy/havlak/bench.lua	/^function SimpleLoop:set_is_root ()$/;"	f
SimpleLoop:set_nesting_level 	lb/heavy/havlak/bench.lua	/^function SimpleLoop:set_nesting_level (level)$/;"	f
SimpleLoop:set_parent 	lb/heavy/havlak/bench.lua	/^function SimpleLoop:set_parent (parent)$/;"	f
Simulator.new 	lb/heavy/collisiondetector/bench.lua	/^function Simulator.new (num_aircrafts)$/;"	f
Simulator:simulate 	lb/heavy/collisiondetector/bench.lua	/^function Simulator:simulate (time)$/;"	f
StayConstraint.new 	lb/light/deltablue/bench.lua	/^function StayConstraint.new (v, strength, planner)$/;"	f
StayConstraint:execute 	lb/light/deltablue/bench.lua	/^function StayConstraint:execute ()$/;"	f
Strength.new 	lb/light/deltablue/bench.lua	/^function Strength.new (strength_sym)$/;"	f
Strength.of 	lb/light/deltablue/bench.lua	/^function Strength.of (sym)$/;"	f
Strength:same_as 	lb/light/deltablue/bench.lua	/^function Strength:same_as (strength)$/;"	f
Strength:stronger 	lb/light/deltablue/bench.lua	/^function Strength:stronger (strength)$/;"	f
Strength:strongest 	lb/light/deltablue/bench.lua	/^function Strength:strongest (strength)$/;"	f
Strength:weaker 	lb/light/deltablue/bench.lua	/^function Strength:weaker (strength)$/;"	f
Strength:weakest 	lb/light/deltablue/bench.lua	/^function Strength:weakest (strength)$/;"	f
Sym.new 	lb/light/deltablue/bench.lua	/^function Sym.new (hash)$/;"	f
Sym:custom_hash 	lb/light/deltablue/bench.lua	/^function Sym:custom_hash ()$/;"	f
TWEETNACL_H	tweetnacl.h	2;"	d
UnaryConstraint:add_to_graph 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:add_to_graph ()$/;"	f
UnaryConstraint:build 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:build (v, strength, planner)$/;"	f
UnaryConstraint:choose_method 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:choose_method (mark)$/;"	f
UnaryConstraint:inputs_do 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:inputs_do ()$/;"	f
UnaryConstraint:inputs_has_one 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:inputs_has_one ()$/;"	f
UnaryConstraint:is_satisfied 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:is_satisfied ()$/;"	f
UnaryConstraint:mark_unsatisfied 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:mark_unsatisfied ()$/;"	f
UnaryConstraint:output 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:output ()$/;"	f
UnaryConstraint:recalculate 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:recalculate ()$/;"	f
UnaryConstraint:remove_from_graph 	lb/light/deltablue/bench.lua	/^function UnaryConstraint:remove_from_graph ()$/;"	f
UnionFindNode.new 	lb/heavy/havlak/bench.lua	/^function UnionFindNode.new ()$/;"	f
UnionFindNode:find_set 	lb/heavy/havlak/bench.lua	/^function UnionFindNode:find_set ()$/;"	f
UnionFindNode:init_node 	lb/heavy/havlak/bench.lua	/^function UnionFindNode:init_node (bb, dfs_number)$/;"	f
UnionFindNode:union 	lb/heavy/havlak/bench.lua	/^function UnionFindNode:union (basic_block)$/;"	f
Variable.new 	lb/light/deltablue/bench.lua	/^function Variable.new (initial_value)$/;"	f
Variable:add_constraint 	lb/light/deltablue/bench.lua	/^function Variable:add_constraint (constraint)$/;"	f
Variable:remove_constraint 	lb/light/deltablue/bench.lua	/^function Variable:remove_constraint (constraint)$/;"	f
Vector.new 	lb/heavy/collisiondetector/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/heavy/havlak/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/array3d/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/bounce/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/chamenos/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/deltablue/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/fannkuch_redux/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/life/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/mandelbrot/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/partialsums/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/queens/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/light/ray/som.lua	/^function Vector.new (size)$/;"	f
Vector.new 	lb/som.lua	/^function Vector.new (size)$/;"	f
Vector.with 	lb/heavy/collisiondetector/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/heavy/havlak/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/array3d/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/bounce/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/chamenos/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/deltablue/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/fannkuch_redux/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/life/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/mandelbrot/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/partialsums/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/queens/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/light/ray/som.lua	/^function Vector.with (elem)$/;"	f
Vector.with 	lb/som.lua	/^function Vector.with (elem)$/;"	f
Vector2D.new 	lb/heavy/collisiondetector/bench.lua	/^function Vector2D.new (x, y)$/;"	f
Vector2D:compare_to 	lb/heavy/collisiondetector/bench.lua	/^function Vector2D:compare_to (other)$/;"	f
Vector2D:minus 	lb/heavy/collisiondetector/bench.lua	/^function Vector2D:minus (other)$/;"	f
Vector2D:plus 	lb/heavy/collisiondetector/bench.lua	/^function Vector2D:plus (other)$/;"	f
Vector3D.new 	lb/heavy/collisiondetector/bench.lua	/^function Vector3D.new (x, y, z)$/;"	f
Vector3D:dot 	lb/heavy/collisiondetector/bench.lua	/^function Vector3D:dot (other)$/;"	f
Vector3D:magnitude 	lb/heavy/collisiondetector/bench.lua	/^function Vector3D:magnitude ()$/;"	f
Vector3D:minus 	lb/heavy/collisiondetector/bench.lua	/^function Vector3D:minus (other)$/;"	f
Vector3D:plus 	lb/heavy/collisiondetector/bench.lua	/^function Vector3D:plus (other)$/;"	f
Vector3D:squared_magnitude 	lb/heavy/collisiondetector/bench.lua	/^function Vector3D:squared_magnitude ()$/;"	f
Vector3D:times 	lb/heavy/collisiondetector/bench.lua	/^function Vector3D:times (amount)$/;"	f
Vector:append 	lb/heavy/collisiondetector/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/heavy/havlak/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/array3d/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/bounce/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/chamenos/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/deltablue/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/fannkuch_redux/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/life/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/mandelbrot/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/partialsums/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/queens/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/light/ray/som.lua	/^function Vector:append (elem)$/;"	f
Vector:append 	lb/som.lua	/^function Vector:append (elem)$/;"	f
Vector:at 	lb/heavy/collisiondetector/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/heavy/havlak/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/array3d/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/bounce/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/chamenos/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/deltablue/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/fannkuch_redux/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/life/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/mandelbrot/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/partialsums/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/queens/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/light/ray/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at 	lb/som.lua	/^function Vector:at (idx)$/;"	f
Vector:at_put 	lb/heavy/collisiondetector/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/heavy/havlak/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/array3d/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/bounce/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/chamenos/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/deltablue/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/fannkuch_redux/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/life/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/mandelbrot/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/partialsums/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/queens/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/light/ray/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:at_put 	lb/som.lua	/^function Vector:at_put (idx, val)$/;"	f
Vector:capacity 	lb/heavy/collisiondetector/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/heavy/havlak/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/array3d/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/bounce/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/chamenos/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/deltablue/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/fannkuch_redux/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/life/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/mandelbrot/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/partialsums/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/queens/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/light/ray/som.lua	/^function Vector:capacity ()$/;"	f
Vector:capacity 	lb/som.lua	/^function Vector:capacity ()$/;"	f
Vector:each 	lb/heavy/collisiondetector/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/heavy/havlak/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/array3d/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/bounce/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/chamenos/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/deltablue/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/fannkuch_redux/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/life/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/mandelbrot/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/partialsums/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/queens/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/light/ray/som.lua	/^function Vector:each (fn)$/;"	f
Vector:each 	lb/som.lua	/^function Vector:each (fn)$/;"	f
Vector:get_one 	lb/heavy/collisiondetector/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/heavy/havlak/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/array3d/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/bounce/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/chamenos/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/deltablue/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/fannkuch_redux/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/life/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/mandelbrot/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/partialsums/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/queens/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/light/ray/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:get_one 	lb/som.lua	/^function Vector:get_one (fn)$/;"	f
Vector:has_some 	lb/heavy/collisiondetector/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/heavy/havlak/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/array3d/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/bounce/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/chamenos/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/deltablue/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/fannkuch_redux/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/life/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/mandelbrot/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/partialsums/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/queens/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/light/ray/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:has_some 	lb/som.lua	/^function Vector:has_some (fn)$/;"	f
Vector:is_empty 	lb/heavy/collisiondetector/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/heavy/havlak/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/array3d/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/bounce/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/chamenos/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/deltablue/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/fannkuch_redux/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/life/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/mandelbrot/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/partialsums/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/queens/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/light/ray/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:is_empty 	lb/som.lua	/^function Vector:is_empty ()$/;"	f
Vector:remove 	lb/heavy/collisiondetector/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/heavy/havlak/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/array3d/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/bounce/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/chamenos/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/deltablue/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/fannkuch_redux/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/life/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/mandelbrot/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/partialsums/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/queens/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/light/ray/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove 	lb/som.lua	/^function Vector:remove (obj)$/;"	f
Vector:remove_all 	lb/heavy/collisiondetector/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/heavy/havlak/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/array3d/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/bounce/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/chamenos/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/deltablue/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/fannkuch_redux/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/life/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/mandelbrot/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/partialsums/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/queens/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/light/ray/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_all 	lb/som.lua	/^function Vector:remove_all ()$/;"	f
Vector:remove_first 	lb/heavy/collisiondetector/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/heavy/havlak/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/array3d/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/bounce/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/chamenos/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/deltablue/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/fannkuch_redux/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/life/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/mandelbrot/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/partialsums/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/queens/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/light/ray/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:remove_first 	lb/som.lua	/^function Vector:remove_first ()$/;"	f
Vector:size 	lb/heavy/collisiondetector/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/heavy/havlak/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/array3d/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/bounce/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/chamenos/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/deltablue/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/fannkuch_redux/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/life/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/mandelbrot/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/partialsums/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/queens/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/light/ray/som.lua	/^function Vector:size ()$/;"	f
Vector:size 	lb/som.lua	/^function Vector:size ()$/;"	f
Vector:sort 	lb/heavy/collisiondetector/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/heavy/havlak/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/array3d/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/bounce/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/chamenos/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/deltablue/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/fannkuch_redux/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/life/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/mandelbrot/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/partialsums/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/queens/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/light/ray/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort 	lb/som.lua	/^function Vector:sort (fn)$/;"	f
Vector:sort_range 	lb/heavy/collisiondetector/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/heavy/havlak/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/array3d/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/bounce/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/chamenos/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/deltablue/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/fannkuch_redux/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/life/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/mandelbrot/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/partialsums/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/queens/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/light/ray/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
Vector:sort_range 	lb/som.lua	/^function Vector:sort_range (i, j, fn)$/;"	f
X	tweetnacl.c	/^  X = {0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169},$/;"	v	file:
Y	tweetnacl.c	/^  Y = {0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666},$/;"	v	file:
Z	tweetnacl.c	/^sv Z(gf o,const gf a,const gf b)$/;"	f
_0	tweetnacl.c	/^  _0[16],$/;"	v	file:
_121665	tweetnacl.c	/^  _121665 = {0xDB41,1},$/;"	v	file:
_9	tweetnacl.c	/^  _9[32] = {9};$/;"	v	file:
_CELLS:draw	lb/light/life/bench.lua	/^function _CELLS:draw()$/;"	f
_CELLS:evolve	lb/light/life/bench.lua	/^function _CELLS:evolve(next)$/;"	f
_CELLS:spawn	lb/light/life/bench.lua	/^function _CELLS:spawn(shape,left,top)$/;"	f
_DEFAULT_SOURCE	client.c	1;"	d	file:
add	tweetnacl.c	/^sv add(gf p[4],gf q[4])$/;"	f
add1305	tweetnacl.c	/^sv add1305(u32 *h,const u32 *c)$/;"	f
advance	lb/heavy/nbody/bench.lua	/^local function advance(bodies, nbody, dt)$/;"	f
aes_key	client.c	/^unsigned char aes_key[16] = {0};$/;"	v
alloc_array 	lb/heavy/collisiondetector/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/heavy/havlak/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/array3d/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/bounce/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/chamenos/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/deltablue/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/fannkuch_redux/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/life/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/mandelbrot/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/partialsums/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/queens/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/light/ray/som.lua	/^    alloc_array = function (n)$/;"	f
alloc_array 	lb/som.lua	/^    alloc_array = function (n)$/;"	f
append	lb/light/richards/bench.lua	/^local function append(pkt, list)$/;"	f
array_new	lb/light/array3d/bench.lua	/^local function array_new(nx, ny, nz, packed)$/;"	f
array_points	lb/light/array3d/bench.lua	/^local function array_points(self)$/;"	f
array_set	lb/light/array3d/bench.lua	/^local function array_set(self, x, y, z, p)$/;"	f
band 	lb/heavy/collisiondetector/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/heavy/havlak/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/array3d/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/bounce/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/chamenos/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/deltablue/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/fannkuch_redux/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/life/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/mandelbrot/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/partialsums/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/queens/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/light/ray/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
band 	lb/som.lua	/^    band = assert(load'--[[band]] return function (a, b) return a & b end')()$/;"	f
benchmark	lb/light/bounce/bench.lua	/^local function benchmark(ticks)$/;"	f
bisect	lb/light/fasta/bench.lua	/^local function bisect(c, p, lo, hi)$/;"	f
bool	tools.c	/^typedef enum { false, true } bool;$/;"	t	typeref:enum:__anon1	file:
bool	tools.h	/^    typedef enum { false, true } bool;$/;"	t	typeref:enum:__anon2
bxor 	lb/heavy/collisiondetector/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/heavy/havlak/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/array3d/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/bounce/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/chamenos/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/deltablue/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/fannkuch_redux/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/life/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/mandelbrot/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/partialsums/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/queens/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/ray/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bxor 	lb/light/richards/bench.lua	/^local function bxor (a,b)$/;"	f
bxor 	lb/som.lua	/^    bxor = assert(load'--[[bxor]] return function (a, b) return a ~ b end')()$/;"	f
bytes	tools.c	/^    unsigned char *bytes;$/;"	m	struct:content	file:
bytes	tools.h	/^        unsigned char *bytes;$/;"	m	struct:content
bytes_to_hex	tools.c	/^char * bytes_to_hex(unsigned char bytes[], int size) {$/;"	f
c) return char	bin.lua	/^		function(c) return char(tonumber(c, 16)) end$/;"	f
c) return char	crypto/bin.lua	/^		function(c) return char(tonumber(c, 16)) end$/;"	f
c) return char	crypto/md5/bin.lua	/^		function(c) return char(tonumber(c, 16)) end$/;"	f
c) return char	crypto/sha256/bin.lua	/^		function(c) return char(tonumber(c, 16)) end$/;"	f
c) return char	crypto/sha512/bin.lua	/^		function(c) return char(tonumber(c, 16)) end$/;"	f
c) return strf	bin.lua	/^			function(c) return strf('%02x', byte(c)) end$/;"	f
c) return strf	crypto/bin.lua	/^			function(c) return strf('%02x', byte(c)) end$/;"	f
c) return strf	crypto/md5/bin.lua	/^			function(c) return strf('%02x', byte(c)) end$/;"	f
c) return strf	crypto/sha256/bin.lua	/^			function(c) return strf('%02x', byte(c)) end$/;"	f
c) return strf	crypto/sha512/bin.lua	/^			function(c) return strf('%02x', byte(c)) end$/;"	f
car25519	tweetnacl.c	/^sv car25519(gf o)$/;"	f
cd:benchmark 	lb/heavy/collisiondetector/bench.lua	/^function cd:benchmark (num_aircrafts)$/;"	f
cd:inner_benchmark_loop 	lb/heavy/collisiondetector/bench.lua	/^function cd:inner_benchmark_loop (inner_iterations)$/;"	f
cd:verify_result 	lb/heavy/collisiondetector/bench.lua	/^function cd:verify_result (actual_collisions, num_aircrafts)$/;"	f
check_args	client.c	/^check_args(int port, char *server, char *input, int nom, int mc, int mu)$/;"	f
compare_numbers 	lb/heavy/collisiondetector/bench.lua	/^local function compare_numbers (a, b)$/;"	f
content	tools.c	/^struct content {$/;"	s	file:
content	tools.h	/^    struct content {$/;"	s
core	tweetnacl.c	/^sv core(u8 *out,const u8 *in,const u8 *k,const u8 *c,int h)$/;"	f
create	lb/light/ray/bench.lua	/^local function create(level, centre, radius)$/;"	f
create_file	tools.c	/^FILE * create_file(char filename[]) {$/;"	f
create_strength_constants 	lb/light/deltablue/bench.lua	/^local function create_strength_constants ()$/;"	f
create_strength_table 	lb/light/deltablue/bench.lua	/^local function create_strength_table ()$/;"	f
creature	lb/light/chamenos/bench.lua	/^local function creature(color)$/;"	f
crypto_auth	tweetnacl.h	4;"	d
crypto_auth_BYTES	tweetnacl.h	6;"	d
crypto_auth_IMPLEMENTATION	tweetnacl.h	8;"	d
crypto_auth_KEYBYTES	tweetnacl.h	7;"	d
crypto_auth_PRIMITIVE	tweetnacl.h	3;"	d
crypto_auth_VERSION	tweetnacl.h	9;"	d
crypto_auth_hmacsha512256	tweetnacl.h	15;"	d
crypto_auth_hmacsha512256_BYTES	tweetnacl.h	17;"	d
crypto_auth_hmacsha512256_IMPLEMENTATION	tweetnacl.h	20;"	d
crypto_auth_hmacsha512256_KEYBYTES	tweetnacl.h	18;"	d
crypto_auth_hmacsha512256_VERSION	tweetnacl.h	19;"	d
crypto_auth_hmacsha512256_tweet_BYTES	tweetnacl.h	10;"	d
crypto_auth_hmacsha512256_tweet_KEYBYTES	tweetnacl.h	11;"	d
crypto_auth_hmacsha512256_tweet_VERSION	tweetnacl.h	14;"	d
crypto_auth_hmacsha512256_verify	tweetnacl.h	16;"	d
crypto_auth_verify	tweetnacl.h	5;"	d
crypto_box	tweetnacl.c	/^int crypto_box(u8 *c,const u8 *m,u64 d,const u8 *n,const u8 *y,const u8 *x)$/;"	f
crypto_box	tweetnacl.h	22;"	d
crypto_box_BEFORENMBYTES	tweetnacl.h	30;"	d
crypto_box_BOXZEROBYTES	tweetnacl.h	33;"	d
crypto_box_IMPLEMENTATION	tweetnacl.h	34;"	d
crypto_box_NONCEBYTES	tweetnacl.h	31;"	d
crypto_box_PRIMITIVE	tweetnacl.h	21;"	d
crypto_box_PUBLICKEYBYTES	tweetnacl.h	28;"	d
crypto_box_SECRETKEYBYTES	tweetnacl.h	29;"	d
crypto_box_VERSION	tweetnacl.h	35;"	d
crypto_box_ZEROBYTES	tweetnacl.h	32;"	d
crypto_box_afternm	tweetnacl.c	/^int crypto_box_afternm(u8 *c,const u8 *m,u64 d,const u8 *n,const u8 *k)$/;"	f
crypto_box_afternm	tweetnacl.h	26;"	d
crypto_box_beforenm	tweetnacl.c	/^int crypto_box_beforenm(u8 *k,const u8 *y,const u8 *x)$/;"	f
crypto_box_beforenm	tweetnacl.h	25;"	d
crypto_box_curve25519xsalsa20poly1305	tweetnacl.h	49;"	d
crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES	tweetnacl.h	57;"	d
crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES	tweetnacl.h	60;"	d
crypto_box_curve25519xsalsa20poly1305_IMPLEMENTATION	tweetnacl.h	62;"	d
crypto_box_curve25519xsalsa20poly1305_NONCEBYTES	tweetnacl.h	58;"	d
crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES	tweetnacl.h	55;"	d
crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES	tweetnacl.h	56;"	d
crypto_box_curve25519xsalsa20poly1305_VERSION	tweetnacl.h	61;"	d
crypto_box_curve25519xsalsa20poly1305_ZEROBYTES	tweetnacl.h	59;"	d
crypto_box_curve25519xsalsa20poly1305_afternm	tweetnacl.h	53;"	d
crypto_box_curve25519xsalsa20poly1305_beforenm	tweetnacl.h	52;"	d
crypto_box_curve25519xsalsa20poly1305_keypair	tweetnacl.h	51;"	d
crypto_box_curve25519xsalsa20poly1305_open	tweetnacl.h	50;"	d
crypto_box_curve25519xsalsa20poly1305_open_afternm	tweetnacl.h	54;"	d
crypto_box_curve25519xsalsa20poly1305_tweet_BEFORENMBYTES	tweetnacl.h	38;"	d
crypto_box_curve25519xsalsa20poly1305_tweet_BOXZEROBYTES	tweetnacl.h	41;"	d
crypto_box_curve25519xsalsa20poly1305_tweet_NONCEBYTES	tweetnacl.h	39;"	d
crypto_box_curve25519xsalsa20poly1305_tweet_PUBLICKEYBYTES	tweetnacl.h	36;"	d
crypto_box_curve25519xsalsa20poly1305_tweet_SECRETKEYBYTES	tweetnacl.h	37;"	d
crypto_box_curve25519xsalsa20poly1305_tweet_VERSION	tweetnacl.h	48;"	d
crypto_box_curve25519xsalsa20poly1305_tweet_ZEROBYTES	tweetnacl.h	40;"	d
crypto_box_keypair	tweetnacl.c	/^int crypto_box_keypair(u8 *y,u8 *x)$/;"	f
crypto_box_keypair	tweetnacl.h	24;"	d
crypto_box_open	tweetnacl.c	/^int crypto_box_open(u8 *m,const u8 *c,u64 d,const u8 *n,const u8 *y,const u8 *x)$/;"	f
crypto_box_open	tweetnacl.h	23;"	d
crypto_box_open_afternm	tweetnacl.c	/^int crypto_box_open_afternm(u8 *m,const u8 *c,u64 d,const u8 *n,const u8 *k)$/;"	f
crypto_box_open_afternm	tweetnacl.h	27;"	d
crypto_core	tweetnacl.h	64;"	d
crypto_core_CONSTBYTES	tweetnacl.h	68;"	d
crypto_core_IMPLEMENTATION	tweetnacl.h	69;"	d
crypto_core_INPUTBYTES	tweetnacl.h	66;"	d
crypto_core_KEYBYTES	tweetnacl.h	67;"	d
crypto_core_OUTPUTBYTES	tweetnacl.h	65;"	d
crypto_core_PRIMITIVE	tweetnacl.h	63;"	d
crypto_core_VERSION	tweetnacl.h	70;"	d
crypto_core_hsalsa20	tweetnacl.c	/^int crypto_core_hsalsa20(u8 *out,const u8 *in,const u8 *k,const u8 *c)$/;"	f
crypto_core_hsalsa20	tweetnacl.h	90;"	d
crypto_core_hsalsa20_CONSTBYTES	tweetnacl.h	94;"	d
crypto_core_hsalsa20_IMPLEMENTATION	tweetnacl.h	96;"	d
crypto_core_hsalsa20_INPUTBYTES	tweetnacl.h	92;"	d
crypto_core_hsalsa20_KEYBYTES	tweetnacl.h	93;"	d
crypto_core_hsalsa20_OUTPUTBYTES	tweetnacl.h	91;"	d
crypto_core_hsalsa20_VERSION	tweetnacl.h	95;"	d
crypto_core_hsalsa20_tweet_CONSTBYTES	tweetnacl.h	87;"	d
crypto_core_hsalsa20_tweet_INPUTBYTES	tweetnacl.h	85;"	d
crypto_core_hsalsa20_tweet_KEYBYTES	tweetnacl.h	86;"	d
crypto_core_hsalsa20_tweet_OUTPUTBYTES	tweetnacl.h	84;"	d
crypto_core_hsalsa20_tweet_VERSION	tweetnacl.h	89;"	d
crypto_core_salsa20	tweetnacl.c	/^int crypto_core_salsa20(u8 *out,const u8 *in,const u8 *k,const u8 *c)$/;"	f
crypto_core_salsa20	tweetnacl.h	77;"	d
crypto_core_salsa20_CONSTBYTES	tweetnacl.h	81;"	d
crypto_core_salsa20_IMPLEMENTATION	tweetnacl.h	83;"	d
crypto_core_salsa20_INPUTBYTES	tweetnacl.h	79;"	d
crypto_core_salsa20_KEYBYTES	tweetnacl.h	80;"	d
crypto_core_salsa20_OUTPUTBYTES	tweetnacl.h	78;"	d
crypto_core_salsa20_VERSION	tweetnacl.h	82;"	d
crypto_core_salsa20_tweet_CONSTBYTES	tweetnacl.h	74;"	d
crypto_core_salsa20_tweet_INPUTBYTES	tweetnacl.h	72;"	d
crypto_core_salsa20_tweet_KEYBYTES	tweetnacl.h	73;"	d
crypto_core_salsa20_tweet_OUTPUTBYTES	tweetnacl.h	71;"	d
crypto_core_salsa20_tweet_VERSION	tweetnacl.h	76;"	d
crypto_hash	tweetnacl.c	/^int crypto_hash(u8 *out,const u8 *m,u64 n)$/;"	f
crypto_hash	tweetnacl.h	122;"	d
crypto_hash_BYTES	tweetnacl.h	123;"	d
crypto_hash_IMPLEMENTATION	tweetnacl.h	124;"	d
crypto_hash_PRIMITIVE	tweetnacl.h	121;"	d
crypto_hash_VERSION	tweetnacl.h	125;"	d
crypto_hash_sha256	tweetnacl.h	136;"	d
crypto_hash_sha256_BYTES	tweetnacl.h	137;"	d
crypto_hash_sha256_IMPLEMENTATION	tweetnacl.h	139;"	d
crypto_hash_sha256_VERSION	tweetnacl.h	138;"	d
crypto_hash_sha256_tweet_BYTES	tweetnacl.h	133;"	d
crypto_hash_sha256_tweet_VERSION	tweetnacl.h	135;"	d
crypto_hash_sha512	tweetnacl.h	129;"	d
crypto_hash_sha512_BYTES	tweetnacl.h	130;"	d
crypto_hash_sha512_IMPLEMENTATION	tweetnacl.h	132;"	d
crypto_hash_sha512_VERSION	tweetnacl.h	131;"	d
crypto_hash_sha512_tweet_BYTES	tweetnacl.h	126;"	d
crypto_hash_sha512_tweet_VERSION	tweetnacl.h	128;"	d
crypto_hashblocks	tweetnacl.c	/^int crypto_hashblocks(u8 *x,const u8 *m,u64 n)$/;"	f
crypto_hashblocks	tweetnacl.h	98;"	d
crypto_hashblocks_BLOCKBYTES	tweetnacl.h	100;"	d
crypto_hashblocks_IMPLEMENTATION	tweetnacl.h	101;"	d
crypto_hashblocks_PRIMITIVE	tweetnacl.h	97;"	d
crypto_hashblocks_STATEBYTES	tweetnacl.h	99;"	d
crypto_hashblocks_VERSION	tweetnacl.h	102;"	d
crypto_hashblocks_sha256	tweetnacl.h	116;"	d
crypto_hashblocks_sha256_BLOCKBYTES	tweetnacl.h	118;"	d
crypto_hashblocks_sha256_IMPLEMENTATION	tweetnacl.h	120;"	d
crypto_hashblocks_sha256_STATEBYTES	tweetnacl.h	117;"	d
crypto_hashblocks_sha256_VERSION	tweetnacl.h	119;"	d
crypto_hashblocks_sha256_tweet_BLOCKBYTES	tweetnacl.h	113;"	d
crypto_hashblocks_sha256_tweet_STATEBYTES	tweetnacl.h	112;"	d
crypto_hashblocks_sha256_tweet_VERSION	tweetnacl.h	115;"	d
crypto_hashblocks_sha512	tweetnacl.h	107;"	d
crypto_hashblocks_sha512_BLOCKBYTES	tweetnacl.h	109;"	d
crypto_hashblocks_sha512_IMPLEMENTATION	tweetnacl.h	111;"	d
crypto_hashblocks_sha512_STATEBYTES	tweetnacl.h	108;"	d
crypto_hashblocks_sha512_VERSION	tweetnacl.h	110;"	d
crypto_hashblocks_sha512_tweet_BLOCKBYTES	tweetnacl.h	104;"	d
crypto_hashblocks_sha512_tweet_STATEBYTES	tweetnacl.h	103;"	d
crypto_hashblocks_sha512_tweet_VERSION	tweetnacl.h	106;"	d
crypto_onetimeauth	tweetnacl.c	/^int crypto_onetimeauth(u8 *out,const u8 *m,u64 n,const u8 *k)$/;"	f
crypto_onetimeauth	tweetnacl.h	141;"	d
crypto_onetimeauth_BYTES	tweetnacl.h	143;"	d
crypto_onetimeauth_IMPLEMENTATION	tweetnacl.h	145;"	d
crypto_onetimeauth_KEYBYTES	tweetnacl.h	144;"	d
crypto_onetimeauth_PRIMITIVE	tweetnacl.h	140;"	d
crypto_onetimeauth_VERSION	tweetnacl.h	146;"	d
crypto_onetimeauth_poly1305	tweetnacl.h	152;"	d
crypto_onetimeauth_poly1305_BYTES	tweetnacl.h	154;"	d
crypto_onetimeauth_poly1305_IMPLEMENTATION	tweetnacl.h	157;"	d
crypto_onetimeauth_poly1305_KEYBYTES	tweetnacl.h	155;"	d
crypto_onetimeauth_poly1305_VERSION	tweetnacl.h	156;"	d
crypto_onetimeauth_poly1305_tweet_BYTES	tweetnacl.h	147;"	d
crypto_onetimeauth_poly1305_tweet_KEYBYTES	tweetnacl.h	148;"	d
crypto_onetimeauth_poly1305_tweet_VERSION	tweetnacl.h	151;"	d
crypto_onetimeauth_poly1305_verify	tweetnacl.h	153;"	d
crypto_onetimeauth_verify	tweetnacl.c	/^int crypto_onetimeauth_verify(const u8 *h,const u8 *m,u64 n,const u8 *k)$/;"	f
crypto_onetimeauth_verify	tweetnacl.h	142;"	d
crypto_scalarmult	tweetnacl.c	/^int crypto_scalarmult(u8 *q,const u8 *n,const u8 *p)$/;"	f
crypto_scalarmult	tweetnacl.h	159;"	d
crypto_scalarmult_BYTES	tweetnacl.h	161;"	d
crypto_scalarmult_IMPLEMENTATION	tweetnacl.h	163;"	d
crypto_scalarmult_PRIMITIVE	tweetnacl.h	158;"	d
crypto_scalarmult_SCALARBYTES	tweetnacl.h	162;"	d
crypto_scalarmult_VERSION	tweetnacl.h	164;"	d
crypto_scalarmult_base	tweetnacl.c	/^int crypto_scalarmult_base(u8 *q,const u8 *n)$/;"	f
crypto_scalarmult_base	tweetnacl.h	160;"	d
crypto_scalarmult_curve25519	tweetnacl.h	170;"	d
crypto_scalarmult_curve25519_BYTES	tweetnacl.h	172;"	d
crypto_scalarmult_curve25519_IMPLEMENTATION	tweetnacl.h	175;"	d
crypto_scalarmult_curve25519_SCALARBYTES	tweetnacl.h	173;"	d
crypto_scalarmult_curve25519_VERSION	tweetnacl.h	174;"	d
crypto_scalarmult_curve25519_base	tweetnacl.h	171;"	d
crypto_scalarmult_curve25519_tweet_BYTES	tweetnacl.h	165;"	d
crypto_scalarmult_curve25519_tweet_SCALARBYTES	tweetnacl.h	166;"	d
crypto_scalarmult_curve25519_tweet_VERSION	tweetnacl.h	169;"	d
crypto_secretbox	tweetnacl.c	/^int crypto_secretbox(u8 *c,const u8 *m,u64 d,const u8 *n,const u8 *k)$/;"	f
crypto_secretbox	tweetnacl.h	177;"	d
crypto_secretbox_BOXZEROBYTES	tweetnacl.h	182;"	d
crypto_secretbox_IMPLEMENTATION	tweetnacl.h	183;"	d
crypto_secretbox_KEYBYTES	tweetnacl.h	179;"	d
crypto_secretbox_NONCEBYTES	tweetnacl.h	180;"	d
crypto_secretbox_PRIMITIVE	tweetnacl.h	176;"	d
crypto_secretbox_VERSION	tweetnacl.h	184;"	d
crypto_secretbox_ZEROBYTES	tweetnacl.h	181;"	d
crypto_secretbox_open	tweetnacl.c	/^int crypto_secretbox_open(u8 *m,const u8 *c,u64 d,const u8 *n,const u8 *k)$/;"	f
crypto_secretbox_open	tweetnacl.h	178;"	d
crypto_secretbox_xsalsa20poly1305	tweetnacl.h	192;"	d
crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES	tweetnacl.h	197;"	d
crypto_secretbox_xsalsa20poly1305_IMPLEMENTATION	tweetnacl.h	199;"	d
crypto_secretbox_xsalsa20poly1305_KEYBYTES	tweetnacl.h	194;"	d
crypto_secretbox_xsalsa20poly1305_NONCEBYTES	tweetnacl.h	195;"	d
crypto_secretbox_xsalsa20poly1305_VERSION	tweetnacl.h	198;"	d
crypto_secretbox_xsalsa20poly1305_ZEROBYTES	tweetnacl.h	196;"	d
crypto_secretbox_xsalsa20poly1305_open	tweetnacl.h	193;"	d
crypto_secretbox_xsalsa20poly1305_tweet_BOXZEROBYTES	tweetnacl.h	188;"	d
crypto_secretbox_xsalsa20poly1305_tweet_KEYBYTES	tweetnacl.h	185;"	d
crypto_secretbox_xsalsa20poly1305_tweet_NONCEBYTES	tweetnacl.h	186;"	d
crypto_secretbox_xsalsa20poly1305_tweet_VERSION	tweetnacl.h	191;"	d
crypto_secretbox_xsalsa20poly1305_tweet_ZEROBYTES	tweetnacl.h	187;"	d
crypto_sign	tweetnacl.c	/^int crypto_sign(u8 *sm,u64 *smlen,const u8 *m,u64 n,const u8 *sk)$/;"	f
crypto_sign	tweetnacl.h	201;"	d
crypto_sign_BYTES	tweetnacl.h	204;"	d
crypto_sign_IMPLEMENTATION	tweetnacl.h	207;"	d
crypto_sign_PRIMITIVE	tweetnacl.h	200;"	d
crypto_sign_PUBLICKEYBYTES	tweetnacl.h	205;"	d
crypto_sign_SECRETKEYBYTES	tweetnacl.h	206;"	d
crypto_sign_VERSION	tweetnacl.h	208;"	d
crypto_sign_ed25519	tweetnacl.h	216;"	d
crypto_sign_ed25519_BYTES	tweetnacl.h	219;"	d
crypto_sign_ed25519_IMPLEMENTATION	tweetnacl.h	223;"	d
crypto_sign_ed25519_PUBLICKEYBYTES	tweetnacl.h	220;"	d
crypto_sign_ed25519_SECRETKEYBYTES	tweetnacl.h	221;"	d
crypto_sign_ed25519_VERSION	tweetnacl.h	222;"	d
crypto_sign_ed25519_keypair	tweetnacl.h	218;"	d
crypto_sign_ed25519_open	tweetnacl.h	217;"	d
crypto_sign_ed25519_tweet_BYTES	tweetnacl.h	209;"	d
crypto_sign_ed25519_tweet_PUBLICKEYBYTES	tweetnacl.h	210;"	d
crypto_sign_ed25519_tweet_SECRETKEYBYTES	tweetnacl.h	211;"	d
crypto_sign_ed25519_tweet_VERSION	tweetnacl.h	215;"	d
crypto_sign_keypair	tweetnacl.c	/^int crypto_sign_keypair(u8 *pk, u8 *sk)$/;"	f
crypto_sign_keypair	tweetnacl.h	203;"	d
crypto_sign_open	tweetnacl.c	/^int crypto_sign_open(u8 *m,u64 *mlen,const u8 *sm,u64 n,const u8 *pk)$/;"	f
crypto_sign_open	tweetnacl.h	202;"	d
crypto_stream	tweetnacl.c	/^int crypto_stream(u8 *c,u64 d,const u8 *n,const u8 *k)$/;"	f
crypto_stream	tweetnacl.h	225;"	d
crypto_stream_IMPLEMENTATION	tweetnacl.h	229;"	d
crypto_stream_KEYBYTES	tweetnacl.h	227;"	d
crypto_stream_NONCEBYTES	tweetnacl.h	228;"	d
crypto_stream_PRIMITIVE	tweetnacl.h	224;"	d
crypto_stream_VERSION	tweetnacl.h	230;"	d
crypto_stream_salsa20	tweetnacl.c	/^int crypto_stream_salsa20(u8 *c,u64 d,const u8 *n,const u8 *k)$/;"	f
crypto_stream_salsa20	tweetnacl.h	247;"	d
crypto_stream_salsa20_IMPLEMENTATION	tweetnacl.h	252;"	d
crypto_stream_salsa20_KEYBYTES	tweetnacl.h	249;"	d
crypto_stream_salsa20_NONCEBYTES	tweetnacl.h	250;"	d
crypto_stream_salsa20_VERSION	tweetnacl.h	251;"	d
crypto_stream_salsa20_tweet_KEYBYTES	tweetnacl.h	242;"	d
crypto_stream_salsa20_tweet_NONCEBYTES	tweetnacl.h	243;"	d
crypto_stream_salsa20_tweet_VERSION	tweetnacl.h	246;"	d
crypto_stream_salsa20_xor	tweetnacl.c	/^int crypto_stream_salsa20_xor(u8 *c,const u8 *m,u64 b,const u8 *n,const u8 *k)$/;"	f
crypto_stream_salsa20_xor	tweetnacl.h	248;"	d
crypto_stream_xor	tweetnacl.c	/^int crypto_stream_xor(u8 *c,const u8 *m,u64 d,const u8 *n,const u8 *k)$/;"	f
crypto_stream_xor	tweetnacl.h	226;"	d
crypto_stream_xsalsa20	tweetnacl.h	236;"	d
crypto_stream_xsalsa20_IMPLEMENTATION	tweetnacl.h	241;"	d
crypto_stream_xsalsa20_KEYBYTES	tweetnacl.h	238;"	d
crypto_stream_xsalsa20_NONCEBYTES	tweetnacl.h	239;"	d
crypto_stream_xsalsa20_VERSION	tweetnacl.h	240;"	d
crypto_stream_xsalsa20_tweet_KEYBYTES	tweetnacl.h	231;"	d
crypto_stream_xsalsa20_tweet_NONCEBYTES	tweetnacl.h	232;"	d
crypto_stream_xsalsa20_tweet_VERSION	tweetnacl.h	235;"	d
crypto_stream_xsalsa20_xor	tweetnacl.h	237;"	d
crypto_verify	tweetnacl.h	254;"	d
crypto_verify_16	tweetnacl.c	/^int crypto_verify_16(const u8 *x,const u8 *y)$/;"	f
crypto_verify_16	tweetnacl.h	261;"	d
crypto_verify_16_BYTES	tweetnacl.h	262;"	d
crypto_verify_16_IMPLEMENTATION	tweetnacl.h	264;"	d
crypto_verify_16_VERSION	tweetnacl.h	263;"	d
crypto_verify_16_tweet_BYTES	tweetnacl.h	258;"	d
crypto_verify_16_tweet_VERSION	tweetnacl.h	260;"	d
crypto_verify_32	tweetnacl.c	/^int crypto_verify_32(const u8 *x,const u8 *y)$/;"	f
crypto_verify_32	tweetnacl.h	268;"	d
crypto_verify_32_BYTES	tweetnacl.h	269;"	d
crypto_verify_32_IMPLEMENTATION	tweetnacl.h	271;"	d
crypto_verify_32_VERSION	tweetnacl.h	270;"	d
crypto_verify_32_tweet_BYTES	tweetnacl.h	265;"	d
crypto_verify_32_tweet_VERSION	tweetnacl.h	267;"	d
crypto_verify_BYTES	tweetnacl.h	255;"	d
crypto_verify_IMPLEMENTATION	tweetnacl.h	256;"	d
crypto_verify_PRIMITIVE	tweetnacl.h	253;"	d
crypto_verify_VERSION	tweetnacl.h	257;"	d
cswap	tweetnacl.c	/^sv cswap(gf p[4],gf q[4],u8 b)$/;"	f
ctr_state	client.c	/^struct ctr_state$/;"	s	file:
decrypt	sample.c	/^decrypt(unsigned char *key, Content encrypted_buffer, unsigned char *client_public_key, unsigned char *server_secret_key)$/;"	f
deltablue:inner_benchmark_loop 	lb/light/deltablue/bench.lua	/^function deltablue:inner_benchmark_loop (inner_iterations)$/;"	f
dl64	tweetnacl.c	/^static u64 dl64(const u8 *x)$/;"	f	file:
dot	lb/light/ray/bench.lua	/^local function dot(x1, y1, z1, x2, y2, z2)$/;"	f
ecount	client.c	/^    unsigned char ecount[16];$/;"	m	struct:ctr_state	file:
encrypt	sample.c	/^encrypt(char *string, unsigned char *server_public_key, unsigned char *client_secret_key)$/;"	f
energy	lb/heavy/nbody/bench.lua	/^local function energy(bodies, nbody)$/;"	f
error	tools.c	/^void error(int code, char message[]) {$/;"	f
errorf	tools.c	/^void errorf(int code, char message[], char arg[]) {$/;"	f
false	tools.c	/^typedef enum { false, true } bool;$/;"	e	enum:__anon1	file:
false	tools.h	/^    typedef enum { false, true } bool;$/;"	e	enum:__anon2
fd	randombytes.c	/^static int fd = -1;$/;"	v	file:
fdecrypt	client.c	/^fdecrypt(unsigned int len, char *cipher, char *text, const unsigned char *enc_key, $/;"	f
fencrypt	client.c	/^fencrypt(char* text, char* cipher, const unsigned char* enc_key, struct ctr_state* state, unsigned int buffer_size)$/;"	f
fib	lb/heavy/recursive_fib/bench.lua	/^local function fib(n)$/;"	f
file_exists	tools.c	/^bool file_exists(char arg[]) {$/;"	f
find_task	lb/light/richards/bench.lua	/^local function find_task(id)$/;"	f
fn_dev	lb/light/richards/bench.lua	/^local function fn_dev(self, pkt)$/;"	f
fn_handler	lb/light/richards/bench.lua	/^local function fn_handler(self, pkt)$/;"	f
fn_idle	lb/light/richards/bench.lua	/^local function fn_idle(self, pkt)$/;"	f
fn_work	lb/light/richards/bench.lua	/^local function fn_work(self, pkt)$/;"	f
get_file_size	client.c	/^get_file_size(FILE *file)$/;"	f
gf	tweetnacl.c	/^typedef i64 gf[16];$/;"	t	file:
gf0	tweetnacl.c	/^  gf0,$/;"	v	file:
gf1	tweetnacl.c	/^  gf1 = {1},$/;"	v	file:
group:add	lb/light/ray/bench.lua	/^function group:add(s)$/;"	f
group:intersect	lb/light/ray/bench.lua	/^function group:intersect(origin, dir, best)$/;"	f
group:new	lb/light/ray/bench.lua	/^function group:new(bound)$/;"	f
handle_openssl_error	client.c	/^handle_openssl_error(void)$/;"	f
havlak:inner_benchmark_loop 	lb/heavy/havlak/bench.lua	/^function havlak:inner_benchmark_loop (inner_iterations)$/;"	f
havlak:verify_result 	lb/heavy/havlak/bench.lua	/^function havlak:verify_result (result, inner_iterations)$/;"	f
hextos	bin.lua	/^local function hextos(hs, unsafe)$/;"	f
hextos	crypto/bin.lua	/^local function hextos(hs, unsafe)$/;"	f
hextos	crypto/md5/bin.lua	/^local function hextos(hs, unsafe)$/;"	f
hextos	crypto/sha256/bin.lua	/^local function hextos(hs, unsafe)$/;"	f
hextos	crypto/sha512/bin.lua	/^local function hextos(hs, unsafe)$/;"	f
i64	tweetnacl.c	/^typedef long long i64;$/;"	t	file:
init_ctr	client.c	/^init_ctr(struct ctr_state *state, const unsigned char iv[16])$/;"	f
inner_iter	lb/bench.lua	/^local function inner_iter(N)$/;"	f
inner_iter	lb/heavy/binarytrees/bench.lua	/^local function inner_iter(mindepth, maxdepth)$/;"	f
inner_iter	lb/heavy/nbody/bench.lua	/^local function inner_iter(N)$/;"	f
inner_iter	lb/heavy/spectralnorm/bench.lua	/^local function inner_iter(N)$/;"	f
inner_iter	lb/light/fannkuch_redux/bench.lua	/^function inner_iter()$/;"	f
integrate	lb/light/series/bench.lua	/^local function integrate(x0, x1, nsteps, omegan, f)$/;"	f
inv25519	tweetnacl.c	/^sv inv25519(gf o,const gf i)$/;"	f
iv	client.c	/^unsigned char iv[16] = {5};$/;"	v
iv	tweetnacl.c	/^static const u8 iv[64] = {$/;"	v	file:
ivec	client.c	/^    unsigned char ivec[16];$/;"	m	struct:ctr_state	file:
ld32	tweetnacl.c	/^static u32 ld32(const u8 *x)$/;"	f	file:
learn.criterion.mse	learn/criterion.lua	/^function learn.criterion.mse(p)$/;"	f
learn.gaussian	learn/learn.lua	/^function learn.gaussian(mean, sd)$/;"	f
learn.layer.linear	learn/layer.lua	/^function learn.layer.linear(p)$/;"	f
learn.model.nnet	learn/model.lua	/^function learn.model.nnet(p)$/;"	f
learn.normalize	learn/learn.lua	/^function learn.normalize(samples)$/;"	f
learn.tensor	learn/tensor.lua	/^function learn.tensor(p)$/;"	f
learn.test	learn/learn.lua	/^function learn.test()$/;"	f
learn.transfer.relu	learn/transfer.lua	/^function learn.transfer.relu(p)$/;"	f
learn.transfer.sigmoid	learn/transfer.lua	/^function learn.transfer.sigmoid(p)$/;"	f
learn.transfer.tanh	learn/transfer.lua	/^function learn.transfer.tanh(p)$/;"	f
learn.transfer.transfer	learn/transfer.lua	/^function learn.transfer.transfer(p)$/;"	f
learn.unormalize	learn/learn.lua	/^function learn.unormalize(samples, max)$/;"	f
length	lb/light/ray/bench.lua	/^local function length(x, y, z)  return sqrt(x*x + y*y + z*z) end$/;"	f
main	client.c	/^main(int argc, char **argv)$/;"	f
main	crypto/rand.c	/^main(int argc, char **argv)$/;"	f
main	lb/light/richards/bench.lua	/^local function main(loops)$/;"	f
make_bisect	lb/light/fasta/bench.lua	/^local function make_bisect(tab)$/;"	f
make_random_fasta	lb/light/fasta/bench.lua	/^local function make_random_fasta(bs, n)$/;"	f
make_repeat_fasta	lb/light/fasta/bench.lua	/^local function make_repeat_fasta(s, n)$/;"	f
max 	lb/heavy/havlak/bench.lua	/^local function max (a, b)$/;"	f
md5	crypto/md5.lua	/^local function md5(input)$/;"	f
md5	crypto/md5/md5.lua	/^local function md5(input)$/;"	f
md5	md5.lua	/^local function md5(input)$/;"	f
meet	lb/light/chamenos/bench.lua	/^local function meet(me)$/;"	f
minusp	tweetnacl.c	/^static const u32 minusp[17] = {$/;"	v	file:
modL	tweetnacl.c	/^sv modL(u8 *r,i64 x[64])$/;"	f
mul	lb/light/ray/bench.lua	/^local function mul(c, x, y, z)  return c*x, c*y, c*z end$/;"	f
mymath.add	mymath.lua	/^function mymath.add(a,b)$/;"	f
mymath.div	mymath.lua	/^function mymath.div(a,b)$/;"	f
mymath.mul	mymath.lua	/^function mymath.mul(a,b)$/;"	f
mymath.sub	mymath.lua	/^function mymath.sub(a,b)$/;"	f
neq25519	tweetnacl.c	/^static int neq25519(const gf a, const gf b)$/;"	f	file:
num	client.c	/^    unsigned int num;$/;"	m	struct:ctr_state	file:
offsetMomentum	lb/heavy/nbody/bench.lua	/^local function offsetMomentum(b, nbody)$/;"	f
output_key	sample.c	/^void output_key(char *str, unsigned char key[], int key_size) {$/;"	f
p.add	learn/tensor.lua	/^  function p.add(b)$/;"	f
p.backward	learn/criterion.lua	/^  function p.backward(predictions, target)$/;"	f
p.backward	learn/layer.lua	/^  function p.backward(input, gradients)$/;"	f
p.backward	learn/model.lua	/^  function p.backward(input, gradients)$/;"	f
p.backward	learn/transfer.lua	/^  function p.backward(input, gradients)$/;"	f
p.copy	learn/tensor.lua	/^  function p.copy()$/;"	f
p.derivative	learn/transfer.lua	/^  function p.derivative(x) return x * (1 - x) end$/;"	f
p.derivative	learn/transfer.lua	/^  function p.derivative(x) return x > 0 and 1 or 0 end$/;"	f
p.derivative	learn/transfer.lua	/^  function p.derivative(x)$/;"	f
p.div	learn/tensor.lua	/^  function p.div(b)$/;"	f
p.dot	learn/tensor.lua	/^  function p.dot(b, result)$/;"	f
p.each	learn/tensor.lua	/^  function p.each(func)$/;"	f
p.each(function(v) result.data[1] 	learn/tensor.lua	/^    p.each(function(v) result.data[1] = result.data[1] + v end)$/;"	f
p.fit	learn/model.lua	/^  function p.fit(features, labels, epochs, learning_rate, verbose)$/;"	f
p.forward	learn/criterion.lua	/^  function p.forward(predictions, target)$/;"	f
p.forward	learn/layer.lua	/^  function p.forward(input)$/;"	f
p.forward	learn/model.lua	/^  function p.forward(input)$/;"	f
p.forward	learn/transfer.lua	/^  function p.forward(input)$/;"	f
p.get	learn/tensor.lua	/^  function p.get(x, y)$/;"	f
p.map	learn/tensor.lua	/^  function p.map(func)$/;"	f
p.mul	learn/tensor.lua	/^  function p.mul(b)$/;"	f
p.pow	learn/tensor.lua	/^  function p.pow(e)$/;"	f
p.predict	learn/model.lua	/^  function p.predict(features)$/;"	f
p.scale	learn/tensor.lua	/^  function p.scale(s)$/;"	f
p.set	learn/tensor.lua	/^  function p.set(v, x, y)$/;"	f
p.string	learn/tensor.lua	/^  function p.string()$/;"	f
p.sub	learn/tensor.lua	/^  function p.sub(b)$/;"	f
p.sum	learn/tensor.lua	/^  function p.sum(result)$/;"	f
p.transfer	learn/transfer.lua	/^  function p.transfer(x) return 1 \/ (1 + math.exp(-x)) end$/;"	f
p.transfer	learn/transfer.lua	/^  function p.transfer(x) return math.max(0, x) end$/;"	f
p.transfer	learn/transfer.lua	/^  function p.transfer(x)$/;"	f
p.transpose	learn/tensor.lua	/^  function p.transpose()$/;"	f
p.update	learn/layer.lua	/^  function p.update(input, learning_rate)$/;"	f
p.update	learn/model.lua	/^  function p.update(input, learning_rate)$/;"	f
p.update	learn/transfer.lua	/^  function p.update(input)$/;"	f
p.weight_init 	learn/layer.lua	/^  p.weight_init = p.weight_init or function()$/;"	f
pack	tweetnacl.c	/^sv pack(u8 *r,gf p[4])$/;"	f
pack25519	tweetnacl.c	/^sv pack25519(u8 *o,const gf n)$/;"	f
packet	lb/light/richards/bench.lua	/^local function packet(link, id, kind)$/;"	f
pad128	crypto/sha2.lua	/^local function pad128(msg, len)$/;"	f
pad128	crypto/sha256/sha2.lua	/^local function pad128(msg, len)$/;"	f
pad128	crypto/sha512/sha2.lua	/^local function pad128(msg, len)$/;"	f
pad128	sha2.lua	/^local function pad128(msg, len)$/;"	f
pad64	crypto/sha2.lua	/^local function pad64(msg, len)$/;"	f
pad64	crypto/sha256/sha2.lua	/^local function pad64(msg, len)$/;"	f
pad64	crypto/sha512/sha2.lua	/^local function pad64(msg, len)$/;"	f
pad64	sha2.lua	/^local function pad64(msg, len)$/;"	f
par25519	tweetnacl.c	/^static u8 par25519(const gf a)$/;"	f	file:
pow2523	tweetnacl.c	/^sv pow2523(gf o,const gf i)$/;"	f
print_key	client.c	/^print_key(char *str, uint8_t *key, int size)$/;"	f
queens:benchmark 	lb/light/queens/bench.lua	/^function queens:benchmark ()$/;"	f
queens:get_row_column 	lb/light/queens/bench.lua	/^function queens:get_row_column (r, c)$/;"	f
queens:init	lb/light/queens/bench.lua	/^function queens:init()$/;"	f
queens:place_queen 	lb/light/queens/bench.lua	/^function queens:place_queen (c)$/;"	f
queens:set_row_column 	lb/light/queens/bench.lua	/^function queens:set_row_column (r, c, v)$/;"	f
queens:setfirst	lb/light/queens/bench.lua	/^function queens:setfirst(row)$/;"	f
queens:verify_result 	lb/light/queens/bench.lua	/^function queens:verify_result (result)$/;"	f
random	lb/light/fasta/bench.lua	/^local function random(max)$/;"	f
randombytes	randombytes.c	/^void randombytes(unsigned char *x,unsigned long long xlen)$/;"	f
ray_trace	lb/light/ray/bench.lua	/^local function ray_trace(light, camera, dir, scene)$/;"	f
read_file	crypto/bench.lua	/^local function read_file(path)$/;"	f
read_file	crypto/md5/bench.lua	/^local function read_file(path)    $/;"	f
read_file	crypto/sha256/bench.lua	/^local function read_file(path)$/;"	f
read_file	crypto/sha512/bench.lua	/^local function read_file(path)$/;"	f
read_file	test.lua	/^local function read_file(path) $/;"	f
read_file	test512.lua	/^local function read_file(path)$/;"	f
read_file	tmd5.lua	/^local function read_file(path)    $/;"	f
read_file	tools.c	/^Content read_file(char filename[]) {$/;"	f
read_key	tools.c	/^void read_key(char filename[], unsigned char key[], int key_size) {$/;"	f
recv_number	client.c	/^recv_number(int sock, int *num)$/;"	f
recv_shared_key	client.c	/^recv_shared_key(int sock, uint8_t *key, int size)$/;"	f
reduce	tweetnacl.c	/^sv reduce(u8 *r)$/;"	f
remote_encrypted	crypto/client.sh	/^remote_encrypted() {$/;"	f
remote_encrypted	lb/client.sh	/^remote_encrypted() {$/;"	f
remote_encrypted_opti	crypto/client.sh	/^remote_encrypted_opti() {$/;"	f
remote_encrypted_opti	lb/client.sh	/^remote_encrypted_opti() {$/;"	f
remote_plain	crypto/client.sh	/^remote_plain() { $/;"	f
remote_plain	lb/client.sh	/^remote_plain() { $/;"	f
return learn.tensor({size 	learn/tensor.lua	/^    return learn.tensor({size = {p.size[1], p.size[2]}}).map(function(v, x, y) return p.get(x, y) end)$/;"	f
return self:has_some(function (it) return it 	lb/heavy/collisiondetector/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/heavy/havlak/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/array3d/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/bounce/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/chamenos/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/deltablue/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/fannkuch_redux/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/life/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/mandelbrot/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/partialsums/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/queens/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/light/ray/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
return self:has_some(function (it) return it 	lb/som.lua	/^    return self:has_some(function (it) return it == obj end)$/;"	f
rotl32	bin.lua	/^local function rotl32(i, n)$/;"	f
rotl32	crypto/bin.lua	/^local function rotl32(i, n)$/;"	f
rotl32	crypto/md5/bin.lua	/^local function rotl32(i, n)$/;"	f
rotl32	crypto/sha256/bin.lua	/^local function rotl32(i, n)$/;"	f
rotl32	crypto/sha512/bin.lua	/^local function rotl32(i, n)$/;"	f
rotr32	bin.lua	/^local function rotr32(i, n)$/;"	f
rotr32	crypto/bin.lua	/^local function rotr32(i, n)$/;"	f
rotr32	crypto/md5/bin.lua	/^local function rotr32(i, n)$/;"	f
rotr32	crypto/sha256/bin.lua	/^local function rotr32(i, n)$/;"	f
rotr32	crypto/sha512/bin.lua	/^local function rotr32(i, n)$/;"	f
rshift 	lb/heavy/collisiondetector/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/heavy/havlak/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/array3d/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/bounce/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/chamenos/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/deltablue/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/fannkuch_redux/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/life/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/mandelbrot/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/partialsums/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/queens/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/light/ray/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
rshift 	lb/som.lua	/^    rshift = assert(load'--[[rshift]] return function (a, b) return a >> b end')()$/;"	f
run_iter	lb/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/heavy/binarytrees/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/heavy/collisiondetector/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/heavy/havlak/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/heavy/nbody/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/heavy/recursive_ack/bench.lua	/^function run_iter(N)$/;"	f
run_iter	lb/heavy/recursive_fib/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/heavy/spectralnorm/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/light/array3d/bench.lua	/^function run_iter(scaling)$/;"	f
run_iter	lb/light/bounce/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/light/chamenos/bench.lua	/^function run_iter(scaling)$/;"	f
run_iter	lb/light/deltablue/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/light/fannkuch_redux/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/light/fasta/bench.lua	/^function run_iter(N)$/;"	f
run_iter	lb/light/life/bench.lua	/^function run_iter(N)$/;"	f
run_iter	lb/light/mandelbrot/bench.lua	/^function run_iter(N)$/;"	f
run_iter	lb/light/partialsums/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/light/queens/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/light/ray/bench.lua	/^function run_iter(n)$/;"	f
run_iter	lb/light/richards/bench.lua	/^function run_iter(loops)$/;"	f
run_iter	lb/light/series/bench.lua	/^function run_iter(n)$/;"	f
scalarbase	tweetnacl.c	/^sv scalarbase(gf p[4],const u8 *s)$/;"	f
scalarmult	tweetnacl.c	/^sv scalarmult(gf p[4],gf q[4],const u8 *s)$/;"	f
schedule	lb/light/chamenos/bench.lua	/^local function schedule(threads)$/;"	f
secret	client.c	/^uint8_t secret[16];         \/* the shared encryption key *\/$/;"	v
sel25519	tweetnacl.c	/^sv sel25519(gf p,gf q,int b)$/;"	f
send_code_to_vm	client.c	/^send_code_to_vm(int sock, char *string, int mode)$/;"	f
send_data	client.c	/^send_data(int sock, char *data, int size)$/;"	f
send_encrypted_string	client.c	/^send_encrypted_string(int sock, char *string, int mode)$/;"	f
send_int	client.c	/^send_int(int sock, int size)$/;"	f
send_shared_key	client.c	/^send_shared_key(int sock, uint8_t *key, int size)$/;"	f
series	lb/light/series/bench.lua	/^local function series(n)$/;"	f
set25519	tweetnacl.c	/^sv set25519(gf r, const gf a)$/;"	f
setup_state	lb/heavy/nbody/bench.lua	/^function setup_state()$/;"	f
sha256 	crypto/sha2.lua	/^local function sha256 (msg)$/;"	f
sha256 	crypto/sha256/sha2.lua	/^local function sha256 (msg)$/;"	f
sha256 	crypto/sha512/sha2.lua	/^local function sha256 (msg)$/;"	f
sha256 	sha2.lua	/^local function sha256 (msg)$/;"	f
sha512 	crypto/sha2.lua	/^local function sha512 (msg)$/;"	f
sha512 	crypto/sha256/sha2.lua	/^local function sha512 (msg)$/;"	f
sha512 	crypto/sha512/sha2.lua	/^local function sha512 (msg)$/;"	f
sha512 	sha2.lua	/^local function sha512 (msg)$/;"	f
sigma	tweetnacl.c	/^static const u8 sigma[16] = "expand 32-byte k";$/;"	v	file:
sigma0	tweetnacl.c	/^static u64 sigma0(u64 x) { return R(x, 1) ^ R(x, 8) ^ (x >> 7); }$/;"	f	file:
sigma1	tweetnacl.c	/^static u64 sigma1(u64 x) { return R(x,19) ^ R(x,61) ^ (x >> 6); }$/;"	f	file:
size	tools.c	/^    size_t size;$/;"	m	struct:content	file:
size	tools.h	/^        size_t size;$/;"	m	struct:content
sphere:intersect	lb/light/ray/bench.lua	/^function sphere:intersect(origin, dir, best)$/;"	f
sphere:new	lb/light/ray/bench.lua	/^function sphere:new(centre, radius)$/;"	f
sphere_distance	lb/light/ray/bench.lua	/^local function sphere_distance(self, origin, dir)$/;"	f
st32	tweetnacl.c	/^sv st32(u8 *x,u32 u)$/;"	f
state	client.c	/^struct ctr_state state;$/;"	v	typeref:struct:ctr_state
stohex	bin.lua	/^local function stohex(s, ln, sep)$/;"	f
stohex	crypto/bin.lua	/^local function stohex(s, ln, sep)$/;"	f
stohex	crypto/md5/bin.lua	/^local function stohex(s, ln, sep)$/;"	f
stohex	crypto/sha256/bin.lua	/^local function stohex(s, ln, sep)$/;"	f
stohex	crypto/sha512/bin.lua	/^local function stohex(s, ln, sep)$/;"	f
sv	tweetnacl.c	3;"	d	file:
t[1] 	lb/light/series/bench.lua	/^  t[1] = integrate(0, 2, 1000, 0, function() return 1 end) \/ 2$/;"	f
task	lb/light/richards/bench.lua	/^local function task(id, link, pri, wkq, state, fn, v1, v2)$/;"	f
task_proto:hold_self	lb/light/richards/bench.lua	/^function task_proto:hold_self()$/;"	f
task_proto:qpkt	lb/light/richards/bench.lua	/^function task_proto:qpkt(pkt)$/;"	f
task_proto:quit	lb/light/richards/bench.lua	/^function task_proto:quit()$/;"	f
task_proto:release	lb/light/richards/bench.lua	/^function task_proto:release(id)$/;"	f
task_proto:run	lb/light/richards/bench.lua	/^function task_proto:run(pkt)$/;"	f
task_proto:suspend	lb/light/richards/bench.lua	/^function task_proto:suspend()$/;"	f
task_proto:tick	lb/light/richards/bench.lua	/^function task_proto:tick(pkt)$/;"	f
task_proto:wait	lb/light/richards/bench.lua	/^function task_proto:wait()$/;"	f
task_proto:waitpkt	lb/light/richards/bench.lua	/^function task_proto:waitpkt()$/;"	f
trace	lb/light/richards/bench.lua	/^local function trace(a)$/;"	f
transform	crypto/md5.lua	/^local function transform(state, input, i, t)$/;"	f
transform	crypto/md5/md5.lua	/^local function transform(state, input, i, t)$/;"	f
transform	md5.lua	/^local function transform(state, input, i, t)$/;"	f
tree_minimum 	lb/heavy/collisiondetector/bench.lua	/^local function tree_minimum (x)$/;"	f
true	tools.c	/^typedef enum { false, true } bool;$/;"	e	enum:__anon1	file:
true	tools.h	/^    typedef enum { false, true } bool;$/;"	e	enum:__anon2
ts64	tweetnacl.c	/^sv ts64(u8 *x,u64 u)$/;"	f
u32	tweetnacl.c	/^typedef unsigned long u32;$/;"	t	file:
u64	tweetnacl.c	/^typedef unsigned long long u64;$/;"	t	file:
u8	tweetnacl.c	/^typedef unsigned char u8;$/;"	t	file:
unitise	lb/light/ray/bench.lua	/^local function unitise(x, y, z) return mul(1\/length(x, y, z), x, y, z) end$/;"	f
unpack25519	tweetnacl.c	/^sv unpack25519(gf o, const u8 *n)$/;"	f
unpackneg	tweetnacl.c	/^static int unpackneg(gf r[4],const u8 p[32])$/;"	f	file:
usage	client.c	/^usage()$/;"	f
v, x, y) p.set	learn/tensor.lua	/^    return p.each(function(v, x, y) p.set(func(p.get(x, y), x, y), x, y) end)$/;"	f
v, x, y) return 	learn/tensor.lua	/^    return p.map(function(v, x, y) return (v^e) end) --math.pow(v, e) end)$/;"	f
v, x, y) return v * b.get	learn/tensor.lua	/^    return p.map(function(v, x, y) return v * b.get(x, y) end)$/;"	f
v, x, y) return v + b.get	learn/tensor.lua	/^    return p.map(function(v, x, y) return v + b.get(x, y) end)$/;"	f
v, x, y) return v - b.get	learn/tensor.lua	/^    return p.map(function(v, x, y) return v - b.get(x, y) end)$/;"	f
v, x, y) return v / b.get	learn/tensor.lua	/^    return p.map(function(v, x, y) return v \/ b.get(x, y) end)$/;"	f
vdot	lb/light/ray/bench.lua	/^local function vdot(a, b)        return dot(a[1], a[2], a[3], b[1], b[2], b[3]) end$/;"	f
vlen	lb/light/ray/bench.lua	/^local function vlen(v)          return length(v[1], v[2], v[3]) end$/;"	f
vn	tweetnacl.c	/^static int vn(const u8 *x,const u8 *y,int n)$/;"	f	file:
vsub	lb/light/ray/bench.lua	/^local function vsub(a, b)        return a[1] - b[1], a[2] - b[2], a[3] - b[3] end$/;"	f
wrap_write	lb/light/fasta/bench.lua	/^function wrap_write(...)$/;"	f
xor1	bin.lua	/^local function xor1(key, plain)$/;"	f
xor1	crypto/bin.lua	/^local function xor1(key, plain)$/;"	f
xor1	crypto/md5/bin.lua	/^local function xor1(key, plain)$/;"	f
xor1	crypto/sha256/bin.lua	/^local function xor1(key, plain)$/;"	f
xor1	crypto/sha512/bin.lua	/^local function xor1(key, plain)$/;"	f
xor8	bin.lua	/^local function xor8(key, plain)$/;"	f
xor8	crypto/bin.lua	/^local function xor8(key, plain)$/;"	f
xor8	crypto/md5/bin.lua	/^local function xor8(key, plain)$/;"	f
xor8	crypto/sha256/bin.lua	/^local function xor8(key, plain)$/;"	f
xor8	crypto/sha512/bin.lua	/^local function xor8(key, plain)$/;"	f
